#include "rs485_communication.h"
#include <iostream>
#include <fcntl.h>
#include <unistd.h>
#include <termios.h>

using namespace std;

int main() {
    const char* device = "/dev/ttyACM0"; // 串口设备文件
    int baud_rate = B115200; // 波特率

    communication * rs;
    rs = new rs485_communication();
    rs->print_on();
    //rs->print_off();

    int fd = rs->client_connect(device, baud_rate);

//    unsigned char data_request[60] = {0x8, 0x55, 0x53, 0xa9, 0x8c, 0x3d, 0xeb, 0x70, 0xf0, 0x12, 0x49, 0xc0, 0x55, 0x54, 0x6d, 0xef, 0xdd, 0xf8, 0x57, 0x15, 0x59, 0xa, 0xa9, 0x55, 0x51, 0xf6, 0x3, 0xd8, 0xfd, 0x43, 0xf9, 0x59, 0xa, 0x13, 0x55, 0x52, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x59, 0xa, 0x8, 0x55, 0x53, 0xa9, 0x8c, 0x3d, 0xeb, 0x70, 0xf0, 0x12, 0x49, 0xc0, 0x55, 0x54, 0x6f, 0xef};
//    unsigned char data_request[10] = {0x55, 0xaa, 0x05, 0x01, 0x31, 0x06, 0x00, 0x03, 0x00, 0x40};
//    unsigned char data_request[8] = {0x01, 0x03, 0x00, 0x01, 0x00, 0x03, 0x54, 0x0b};
    unsigned char open[9] = {0x55, 0xAA, 0x04, 0x01, 0x21, 0x37, 0x84, 0x03, 0xe4};
    unsigned char close[9] = {0x55, 0xAA, 0x04, 0x01, 0x21, 0x37, 0x40, 0x06, 0xa3};

//    sleep(5);

//    rs->client_send_data(fd, close, sizeof (close));

//    sleep(2);

    rs->client_send_data(fd, open, sizeof (open));
//    rs->get_sum8()
    //rs->valid_data_search_crc(data_request, head, 8, 2, 8, 2);
//    rs->client_receive_data(fd, state_answer, sizeof(state_answer));

//    rs->client_send_data(fd, setting, sizeof (setting));
//    cout << hex << (int)data_request[0] << " " << (int)data_request[1] << " " << (int)data_request[2] << " " << (int)data_request[3] << dec << endl;

    rs->client_disconnect(fd);

    sleep(5);

    return 0;
}

